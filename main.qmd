
```{r}
# libraries 

library(ggplot2)
library(jsonlite)
library(dplyr)

library(survival)
library(tidyverse)
library(janitor)
library(survminer)
library(knitr)

```


```{r}
# load the data
file_path <- "paired_bladder_2022_clinical_data.tsv"

# Read the JSON data into R
data <- fromJSON(file_path)

# Convert the resulting list into a data frame, if needed
data <- as.data.frame(data)

# Remove the studyId column
data <- data %>% select(-studyId)
```

```{r}
# data summary
head(data)

summary(data)

```




### Data Exploration 
```{r}
# website - has the pie chart distribution 

# Create individual bar plots for each variable
# 1. Sex
p1 <- ggplot(data, aes(x = SEX)) +
  geom_bar() +
  labs(title = "Distribution by Sex", x = "Sex", y = "Count") +
  theme_minimal()


# 4. Smoker
p2 <- ggplot(data, aes(x = SMOKER)) +
  geom_bar() +
  labs(title = "Distribution by Smoking Status", x = "Smoking Status", y = "Count") +
  theme_minimal()

# Combine plots using the patchwork library if you want them in a grid
library(patchwork)
combined_plot <- p1 + p2 + plot_layout(ncol = 2)
print(combined_plot)
```


```{r}
# we already have fraction of geno altered and MSI score on the website - just include this
```



## AFT Models

### Cleaning Data
```{r}
# sex, MSI score, mutation count of tumor (or fraction of mutated cells), and smoking status
data_mutated <- data %>%
  filter(OS_MONTHS > 0) %>%
  mutate(STATUS = if_else(OS_STATUS == "1:DECEASED", 1, 
                          if_else(OS_STATUS == "0:LIVING", 0, NA_real_))) %>%
  mutate(MONTHS = as.numeric(OS_MONTHS), 
         MSI_SCORE = as.numeric(MSI_SCORE),
         MUTATION_COUNT = as.numeric(MUTATION_COUNT),
         FRACTION_GENOME_ALTERED = as.numeric(FRACTION_GENOME_ALTERED))%>%
  filter(!is.na(SMOKER) & !is.na(MSI_SCORE) & !is.na(MUTATION_COUNT) & !is.na(FRACTION_GENOME_ALTERED)) %>% # filter out smoker 
  select(MONTHS, STATUS, SEX, MSI_SCORE, MUTATION_COUNT, FRACTION_GENOME_ALTERED, SMOKER)

head(data_mutated)
  
```
```{r}
# check whether there are any NAs in the data
any(is.na(data_mutated))
colSums(is.na(data_mutated))
count(data_mutated) # resulting sample size is 285. 
```


### Fitting AFT models
```{r}
model_weib <- survreg(Surv(MONTHS, STATUS) ~ SEX + MSI_SCORE + MUTATION_COUNT + FRACTION_GENOME_ALTERED + SMOKER,
                  data=data_mutated)
summary(model_weib)
```

```{r}
model_exp <- survreg(Surv(MONTHS, STATUS) ~ SEX + MSI_SCORE + MUTATION_COUNT + FRACTION_GENOME_ALTERED + SMOKER,
                  data=data_mutated, dist="exponential")
summary(model_exp)
```
```{r}
model_lognm <- survreg(Surv(MONTHS, STATUS) ~ SEX + MSI_SCORE + MUTATION_COUNT + FRACTION_GENOME_ALTERED + SMOKER,
                  data=data_mutated, dist = "lognormal")
summary(model_lognm)
```

```{r}
model_loglogistic <- survreg(Surv(MONTHS, STATUS) ~ SEX + MSI_SCORE + MUTATION_COUNT + FRACTION_GENOME_ALTERED + SMOKER,
                  data=data_mutated, dist="loglogistic")
summary(model_loglogistic)
```
### Exploring different predictor

```{r}
# Visualize scatter plots for individual covariates
data_mutated %>%
  ggplot(aes(x = SEX, y = log(MONTHS))) +
  geom_violin(width = 0.8, alpha = 0.5, fill = "lightblue") +
  geom_boxplot(width = 0.1, alpha = 0.2) +
  labs(x = "SEX", y = "log(MONTHS)", title = "Distribution of log(MONTHS) by SEX") +
  theme_minimal()

data_mutated %>% 
  mutate(status_cat = ifelse(STATUS == 1, "Failed", "Censored")) %>%
  ggplot(aes(x = MSI_SCORE, y = log(MONTHS))) +
  geom_point(aes(shape = status_cat, color = status_cat)) +
  scale_shape_manual(values = c(17, 16)) +
  scale_color_manual(values = c("red", "gray")) +
  theme_minimal()

data_mutated %>% 
  mutate(status_cat = ifelse(STATUS == 1, "Failed", "Censored")) %>%
  ggplot(aes(x = MUTATION_COUNT, y = log(MONTHS))) +
  geom_point(aes(shape = status_cat, color = status_cat)) +
  scale_shape_manual(values = c(17, 16)) +
  scale_color_manual(values = c("red", "gray")) +
  theme_minimal()

data_mutated %>% 
  mutate(status_cat = ifelse(STATUS == 1, "Failed", "Censored")) %>%
  ggplot(aes(x = FRACTION_GENOME_ALTERED, y = log(MONTHS))) +
  geom_point(aes(shape = status_cat, color = status_cat)) +
  scale_shape_manual(values = c(17, 16)) +
  scale_color_manual(values = c("red", "gray")) +
  theme_minimal()

data_mutated %>%
  ggplot(aes(x = SMOKER, y = log(MONTHS))) +
  geom_violin(width = 0.8, alpha = 0.5, fill = "lightblue") +
  geom_boxplot(width = 0.1, alpha = 0.2) +
  labs(x = "Smoking Status", y = "log(MONTHS)", title = "Distribution of log(MONTHS) by Smoking Status") +
  theme_minimal()

```
For the three numerical covariates show no clear relationship with the log(months), although this may be due to the large proportion of censored data.

```{r}
# Kaplan-Meier Plot to visualize survival across groups
km_fit <- survfit(Surv(MONTHS, STATUS) ~ SEX, data = data_mutated)
ggsurvplot(km_fit, data = data_mutated, pval = TRUE, conf.int = TRUE, 
           ggtheme = theme_minimal(),
           title = "Kaplan-Meier Curve by Sex")

# Stratify by smoking status
km_fit_smoker <- survfit(Surv(MONTHS, STATUS) ~ SMOKER, data = data_mutated)
ggsurvplot(km_fit_smoker, data = data_mutated, pval = TRUE, conf.int = TRUE, 
           ggtheme = theme_minimal(),
           title = "Kaplan-Meier Curve by Smoking Status")
```
The active smoker seem to have a lower survival probabilty at a given time comparing to the two other groups. Female seem to have a lower survival probability at a given time compare to male.

### Comparing Different Models
```{r}
fit.weib <- survreg(Surv(MONTHS, STATUS)~1, data=data_mutated, dist='weibull') 
fit.exp <- survreg(Surv(MONTHS, STATUS)~1, data=data_mutated, dist="exponential") 
fit.lognm <- survreg(Surv(MONTHS, STATUS)~1, data=data_mutated, dist="lognormal")
fit.loglogistic <- survreg(Surv(MONTHS, STATUS)~1, data=data_mutated, dist="loglogistic")
```

```{r}
fit.km <- survfit(Surv(MONTHS, STATUS)~1, data=data_mutated, conf.int=FALSE) 
time <- fit.km$time

source("helper_functions_predict_survival_probabilities.R")

dat_wide <- tibble(t = fit.km$time,
                   .km_surv=fit.km$surv, 
                   weib_surv = 
                     predict_survival_weibull(object = fit.weib, 
                                              newdat=tibble(z=NA), t=t),
                   exp_surv = 
                     predict_survival_exponential(object = fit.exp,
                                                  newdat=tibble(z=NA), t=t),
                   loglogistic_surv = 
                     predict_survival_loglogistic(object = 
                                                    fit.loglogistic,
                                                  newdat=tibble(z=NA), t=t),
                   lognorm_surv = 
                     predict_survival_lognormal(object = fit.lognm, 
                                                newdata = tibble(z=NA), t=t))
dat <- dat_wide |>
  pivot_longer(cols=c(.km_surv, weib_surv, exp_surv, loglogistic_surv, lognorm_surv),
               names_to="model", values_to="surv")

dat_parametric <- dat |> filter(model %in% c("weib_surv", "exp_surv",
                                             "loglogistic_surv", "lognorm_surv"))

dat_nonparmetric <- dat |> filter(model == ".km_surv")

dat_parametric |> 
  ggplot(aes(x = t, y = surv, color=model, linetype=model)) +
  geom_line() +
  geom_step(aes(x = t, y = surv, color=model, linetype=model), 
            data=dat_nonparmetric) +
  scale_fill_discrete(breaks = c(".km_surv", "exp_surv", "weib_surv",
                                 "loglogistic_surv", "lognorm_surv")) +
  labs(title="Overall survival for patients with advanced lung cancer",
       x="Time (days)", y="Survival Probability")
```
Log-logistic model seem to fit the data best.

```{r}
dat_wide |>
  pivot_longer(cols=c(weib_surv, exp_surv, loglogistic_surv, lognorm_surv),
               names_to="model", values_to="surv") |>
  mutate(model = case_when(model == "exp_surv" ~ "Exponential",
                           model == "loglogistic_surv" ~ "Log-logistic", 
                           model == "lognorm_surv" ~ "Lognormal", 
                           model == "weib_surv" ~ "Weibull"),
         model = factor(model, levels=c("Exponential", "Weibull",
                                        "Lognormal", "Log-logistic"))) |>
  ggplot(aes(x = .km_surv, y = surv, color=model)) + 
  geom_point() + 
  geom_abline(intercept = 0, slope = 1, linetype=2) +
  facet_wrap(~model)

```
Log-normal seem to fit the data best.

```{r}
km <- survfit(Surv(MONTHS, STATUS) ~ 1, data = data_mutated)

dat <- tibble(
  time = rep(km$time, 3),
  surv = rep(km$surv, 3),
  psi_inverse_surv = c(
    log(-log(km$surv)),                # Weibull
    qnorm(1 - km$surv),                # Log-normal
    log((1 - km$surv) / km$surv)       # Log-logistic
  ),
  model = rep(c("weibull", "lognormal", "loglogistic"), each = length(km$time))
) %>%
  mutate(model = factor(model, levels = c("weibull", "lognormal", "loglogistic")))

dat %>%
  ggplot(aes(x = log(time), y = psi_inverse_surv, color = model, group = model)) +
  geom_point() +
  ylab(expression(paste(G^{-1}, "(S(t))"))) +
  xlab(expression(log(t))) +
  geom_smooth(formula = y ~ x, method = "lm", se = FALSE) +
  facet_grid(~model) +
  labs(title = "Comparison of parametric fits") +
  theme_minimal()

```
Log-normal seem to fit the data best

```{r}
# Break into female and male
km_male <- survfit(Surv(MONTHS, STATUS) ~ 1, data = data_mutated, subset = (SEX == "Male"))
km_female <- survfit(Surv(MONTHS, STATUS) ~ 1, data = data_mutated, subset = (SEX == "Female"))

dat2 <- tibble(
  time = rep(c(km_male$time, km_female$time), 3),
  surv = rep(c(km_male$surv, km_female$surv), 3),
  sex = rep(c(rep("Male", length(km_male$time)), rep("Female", length(km_female$time))), 3),
  psi_inverse_surv = c(
    log(-log(c(km_male$surv, km_female$surv))),                # Weibull
    qnorm(1 - c(km_male$surv, km_female$surv)),                # Log-normal
    log((1 - c(km_male$surv, km_female$surv)) / c(km_male$surv, km_female$surv)) # Log-logistic
  ),
  model = rep(c("weibull", "lognormal", "loglogistic"), each = length(c(km_male$time, km_female$time)))
) %>%
  mutate(
    model = factor(model, levels = c("weibull", "lognormal", "loglogistic"))
  )

dat2 %>%
  ggplot(aes(x = log(time), y = psi_inverse_surv, col = model, group = sex, shape = sex)) +
  geom_point() +
  ylab(expression(paste(G^{-1}, "(S(t))"))) +
  xlab(expression(log(t))) +
  geom_smooth(formula = y ~ x, method = "lm", se = FALSE) +
  facet_grid(~model) +
  labs(title = "Comparison of parametric fits with a categorical predictor") +
  theme_minimal()

```
Hard to tell

```{r}
# break into different smoking group
km_active <- survfit(Surv(MONTHS, STATUS) ~ 1, data = data_mutated, subset = (SMOKER == "Active"))
km_former <- survfit(Surv(MONTHS, STATUS) ~ 1, data = data_mutated, subset = (SMOKER == "Former"))
km_never <- survfit(Surv(MONTHS, STATUS) ~ 1, data = data_mutated, subset = (SMOKER == "Never"))

dat_smoker <- tibble(
  time = rep(c(km_active$time, km_former$time, km_never$time), 3),
  surv = rep(c(km_active$surv, km_former$surv, km_never$surv), 3),
  smoker_status = rep(c(
    rep("Active", length(km_active$time)), 
    rep("Former", length(km_former$time)), 
    rep("Never", length(km_never$time)
  )), 3),
  psi_inverse_surv = c(
    log(-log(c(km_active$surv, km_former$surv, km_never$surv))),              # Weibull
    qnorm(1 - c(km_active$surv, km_former$surv, km_never$surv)),              # Log-normal
    log((1 - c(km_active$surv, km_former$surv, km_never$surv)) / c(km_active$surv, km_former$surv, km_never$surv)) # Log-logistic
  ),
  model = rep(c("weibull", "lognormal", "loglogistic"), each = length(c(km_active$time, km_former$time, km_never$time)))
) %>%
  mutate(
    model = factor(model, levels = c("weibull", "lognormal", "loglogistic"))
  )

dat_smoker %>%
  ggplot(aes(x = log(time), y = psi_inverse_surv, col = model, group = smoker_status, shape = smoker_status)) +
  geom_point() +
  ylab(expression(paste(G^{-1}, "(S(t))"))) +
  xlab(expression(log(t))) +
  geom_smooth(formula = y ~ x, method = "lm", se = FALSE) +
  facet_grid(~model) +
  labs(title = "Comparison of parametric fits by smoker status (Active, Former, Never)") +
  theme_minimal()


```
Weibull fit the data best as the lines are the most parallel. 

### Model Selection

```{r}

fit_weibull <- survreg(Surv(MONTHS, STATUS) ~ SEX + MSI_SCORE + MUTATION_COUNT + FRACTION_GENOME_ALTERED + SMOKER, data = data_mutated, dist = "weibull")
summary(fit_weibull)

log_scale <- summary(fit_weibull)$table[2, 1]  # Extract estimated log(scale)
se_log_scale <- summary(fit_weibull)$table[2, 2]  # Extract standard error

# Wald Test
z_stat_wald <- log_scale / se_log_scale  # Wald test statistic
p_value_wald <- 2 * (1 - pnorm(abs(z_stat_wald)))  # Two-tailed p-value
p_value_wald

fit_exponential <- survreg(Surv(MONTHS, STATUS) ~ SEX + MSI_SCORE + MUTATION_COUNT + FRACTION_GENOME_ALTERED + SMOKER, data = data_mutated, dist = "exponential")
summary(fit_exponential)

# LR Test
loglik_weibull <- summary(fit_weibull)$loglik[1]
loglik_exponential <- summary(fit_exponential)$loglik[1]
lr_stat <- 2 * (loglik_weibull - loglik_exponential)
p_value_lr <- pchisq(lr_stat, df = 1, lower.tail = FALSE)
p_value_lr

```
At 5% significance, under the wald test, we have strong evidence against the null hypothesis that the exponential model is suitable for these data.

At 5% significance, under the LR test, we have no evidence against the null hypothesis that the exponential model is suitable for these data.

(Not sure which to trust, so still used weibull for the following analysis)

### Test if the different groups follow different survival distributions

#### Smoking
```{r}
fit_all <- survreg(Surv(MONTHS, STATUS) ~ SMOKER, data = data_mutated, dist = "weibull")
summary(fit_all)

# For different smoking group
fit_active <- survreg(Surv(MONTHS, STATUS) ~ 1, data = data_mutated, subset = (SMOKER == "Active"))
fit_former <- survreg(Surv(MONTHS, STATUS) ~ 1, data = data_mutated, subset = (SMOKER == "Former"))
fit_never <- survreg(Surv(MONTHS, STATUS) ~ 1, data = data_mutated, subset = (SMOKER == "Never"))

# Log-likelihood of general model
loglik_combined <- summary(fit_all)$loglik[1]
# Combining log-likelihood of each group
loglik_separate <- sum(c(summary(fit_active)$loglik[1], 
                         summary(fit_former)$loglik[1], 
                         summary(fit_never)$loglik[1]))

lr_stat_scale <- 2 * (loglik_separate - loglik_combined)
p_value_scale <- pchisq(lr_stat_scale, df = 2, lower.tail = FALSE)  # df = (3 groups - 1)
cat("Scale Equality LR Test Statistic:", lr_stat_scale, "\nP-value:", p_value_scale, "\n")

```
At 0.05 level of significance, we have strong evidence against the null hypothesis that the $H_0:\tau_1=\tau_2$, so we can conclude that the three groups have different log scale parameter

#### Sex

```{r}
fit_all_sex <- survreg(Surv(MONTHS, STATUS) ~ SEX, data = data_mutated, dist = "weibull")
summary(fit_all_sex)

# Fit for different sex
fit_male <- survreg(Surv(MONTHS, STATUS) ~ 1, data = data_mutated, subset = (SEX == "Male"))
fit_female <- survreg(Surv(MONTHS, STATUS) ~ 1, data = data_mutated, subset = (SEX == "Female"))

# Log-likelihood of general model
loglik_combined_sex <- summary(fit_all_sex)$loglik[1]
# Combining log_likelihood of each group
loglik_separate_sex <- sum(c(summary(fit_male)$loglik[1], 
                             summary(fit_female)$loglik[1]))

lr_stat_scale_sex <- 2 * (loglik_separate_sex - loglik_combined_sex)
p_value_scale_sex <- pchisq(lr_stat_scale_sex, df = 1, lower.tail = FALSE)  # df = (2 groups - 1)
cat("Scale Equality LR Test Statistic (SEX):", lr_stat_scale_sex, "\nP-value:", p_value_scale_sex, "\n")

```
At 0.05 level of significance, we have strong evidence against the null hypothesis that the $H_0:\tau_1=\tau_2$, so we can conclude that the two groups have different log scale parameter

### Reducing Unnecessory Predictors
```{r}
# Fit a Weibull model including covariates SEX, MSI_SCORE, MUTATION_COUNT, FRACTION_GENOME_ALTERED, and SMOKER
model1 <- survreg(Surv(MONTHS, STATUS) ~ SEX + MSI_SCORE + MUTATION_COUNT + FRACTION_GENOME_ALTERED + SMOKER,
                  data = data_mutated, dist = "weibull")
summary(model1)

```
```{r}
# Reduced all variables with p-value larger than 0.05
model2 <- survreg(Surv(MONTHS, STATUS) ~ SEX + SMOKER,
                  data = data_mutated, dist = "weibull")
summary(model2)

```

```{r}
# try only include smoker
model3 <- survreg(Surv(MONTHS, STATUS) ~ SMOKER,
                  data = data_mutated, dist = "weibull")
summary(model3)

```

```{r}
# Likelihood Ratio Test between Model 1 and Model 2
loglik_model1 <- summary(model1)$loglik[1]
loglik_model2 <- summary(model2)$loglik[1]

lr_stat <- 2 * (loglik_model1 - loglik_model2)
p_value_lr <- pchisq(lr_stat, df = 1, lower.tail = FALSE)
cat("LR Test Statistic:", lr_stat, "\nP-value:", p_value_lr, "\n")

```
$H_0:$ Model 1 is as good as Model 2 vs $H_A:$ Model 1 is not as good as Model 2.

At 5% significance, we have strong evidence against the null hypothesis that Model 1 is as good as Model 2. So we should use model 2. 

```{r}
# Likelihood Ratio Test between Model 2 and Model 3
loglik_model2 <- summary(model2)$loglik[1]
loglik_model3 <- summary(model3)$loglik[1]

lr_stat <- 2 * (loglik_model2 - loglik_model3)
p_value_lr <- pchisq(lr_stat, df = 1, lower.tail = FALSE)
cat("LR Test Statistic:", lr_stat, "\nP-value:", p_value_lr, "\n")

```
$H_0:$ Model 2 is as good as Model 3 vs $H_A:$ Model 2 is not as good as Model 3.

At 5% significance, we have no evidence against the null hypothesis that Model 2 is as good as Model 3. So we should use model 2.

```{r}
data_mutated <- data_mutated %>%
  filter(!is.na(MONTHS) & !is.na(STATUS))

# Extract parameter estimates from model2
beta_hat <- model2$coef
alpha <- beta_hat[1] +
  beta_hat[2] * ifelse(data_mutated$SEX == "Male", 1, 0) +
  beta_hat[3] * ifelse(data_mutated$SMOKER == "Active", 1,
                       ifelse(data_mutated$SMOKER == "Former", 2, 0))

tau <- model2$scale
t <- data_mutated$MONTHS
delta <- data_mutated$STATUS

# Compute Cox-Snell residuals
cs_residuals <- exp((log(t) - alpha) / tau) + 1 - delta

# Add residuals to the dataset for plotting
data_mutated <- data_mutated %>%
  mutate(cs_residuals = cs_residuals)

# 1. Plot residuals vs SEX
ggplot(data_mutated, aes(x = SEX, y = cs_residuals)) +
  geom_boxplot() +
  labs(title = "Cox-Snell Residuals by SEX", x = "SEX", y = "Cox-Snell Residuals") +
  theme_minimal()

# 2. Plot residuals vs SMOKER
ggplot(data_mutated, aes(x = SMOKER, y = cs_residuals)) +
  geom_boxplot() +
  labs(title = "Cox-Snell Residuals by SMOKER", x = "SMOKER", y = "Cox-Snell Residuals") +
  theme_minimal()

# 3. Compare residuals to an exponential distribution
# Histogram of residuals
ggplot(data_mutated, aes(x = cs_residuals)) +
  geom_histogram(aes(y = ..density..), bins = 20, fill = "blue", alpha = 0.5) +
  stat_function(fun = dexp, args = list(rate = 1), color = "red", linetype = "dashed") +
  labs(title = "Histogram of Cox-Snell Residuals vs Exponential(1)",
       x = "Cox-Snell Residuals", y = "Density") +
  theme_minimal()

# 4. Summary statistics for residuals
cat("Mean of residuals:", mean(cs_residuals), "\n")
cat("Expected mean under EXP(1): 1\n")
cat("90th quantile of residuals:", quantile(cs_residuals, 0.9), "\n")
cat("Expected 90th quantile under EXP(1):", -log(1 - 0.9), "\n")


```
From the plot above and related summary statistics, it appears that the C-S residuals from Model 2 roughly follow an EXP(1) distribution, which suggests the model fits these data well.


## COX/PH Model


### Fitting COX models


```{r}
model_cox_all_predictors <- coxph(Surv(MONTHS, STATUS) ~ SEX + MSI_SCORE + MUTATION_COUNT + FRACTION_GENOME_ALTERED + SMOKER,
                  data=data_mutated)
summary(model_cox_all_predictors)
```
```{r}
# remove predictors with p-value > 0.05 - removed MUTATION_COUNT and FRACTION_GENOME_ALTERED  
model_cox_2 <- coxph(Surv(MONTHS, STATUS) ~ SEX + MSI_SCORE + SMOKER,
                  data=data_mutated)
summary(model_cox_2)
```
```{r}
# try removing MSI_score
model_cox_3 <- coxph(Surv(MONTHS, STATUS) ~ SEX + SMOKER,
                  data=data_mutated)
summary(model_cox_3)
```
### Choose Best Model 


```{r}
lr_summary <- tibble(model=c(1,2,3),
 n_param = c(5, 3, 2),
 loglik = c(model_cox_all_predictors$loglik[2], model_cox_2$loglik[2], model_cox_3$loglik[2]),
 CompToModel=c(NA, 1, 2),
 obsLRstat=c(NA,-2*(model_cox_2$loglik[2]-model_cox_all_predictors$loglik[2]),-2*(model_cox_3$loglik[2]-model_cox_2$loglik[2])),
 df_for_comp = c(NA, 5-3, 3-2),
 pvalue = c(NA,
 pchisq(-2*(model_cox_2$loglik[2]-model_cox_all_predictors$loglik[2]),
 df=3, lower.tail=FALSE),
 pchisq(-2*(model_cox_3$loglik[2]-model_cox_2$loglik[2]),
 df=3, lower.tail=FALSE)))
 kable(lr_summary)
```

$H_0:$ Model 1 is as good as Model 2 vs $H_A:$ Model 1 is not as good as Model 2.

At 5% significance, we don't have evidence against the null hypothesis that Model 1 is as good as Model 2. So we should use model 2.  

Similarly, when $H_0:$ Model 2 is as good as Model 3  vs $H_A:$ Model 2 is not as good as Model 3.

At 5% significance, we don't have evidence against the null hypothesis that Model 2 is as good as Model 3. So we should use model 3.  

**Therefore, we should use our last model, which includes sex and smoker as our predictors. **

### obtain performance amongst female vs male

```{r}
 # Assuming `model_cox_3` is your Cox proportional hazards model

# Prepare new data to predict survival for both Male and Female, with SMOKER = "Active"
newdata <- data.frame(SEX = c("Female"), SMOKER = c("Active", "Former", "Never"))

# Use survfit to compute survival curves
sf_cox <- survfit(model_cox_3, newdata = newdata, data = data_mutated)

# Plot survival curves using ggsurvplot
ggsurvplot(sf_cox, 
           conf.int = FALSE,        # No confidence intervals
           censor.shape = "|",      # Censor symbol
           risk.table = FALSE,      # Don't show the risk table
           legend.title = "",       # No title for legend
           legend.labs = c("Active", "Former", "Never"), # Labels for the survival curves
           title = "Estimated Survival Curves for Each Smoking Status for Females") # Plot title

```


```{r}
 # Assuming `model_cox_3` is your Cox proportional hazards model

# Prepare new data to predict survival for both Male and Female, with SMOKER = "Active"
newdata <- data.frame(SEX = c("Male"), SMOKER = c("Active", "Former", "Never"))

# Use survfit to compute survival curves
sf_cox <- survfit(model_cox_3, newdata = newdata, data = data_mutated)

# Plot survival curves using ggsurvplot
ggsurvplot(sf_cox, 
           conf.int = FALSE,        # No confidence intervals
           censor.shape = "|",      # Censor symbol
           risk.table = FALSE,      # Don't show the risk table
           legend.title = "",       # No title for legend
           legend.labs = c("Active", "Former", "Never"), # Labels for the survival curves
           title = "Estimated Survival Curves for Each Smoking Status for Males") # Plot title

```

optional- TODO : Make Comparison to KM -estimates with the plots above (male vs. female) ? 
TODO : residual analysis for COX 
TODO : compare how the results hold amongst Cox and AFT. 


